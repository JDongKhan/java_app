<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jd.dao.mapper.UserMapper">
    <!-- 自定义返回结果集 -->
    <resultMap id="userMap" type="com.jd.dao.beans.UserBean">
        <id property="user_id" column="user_id" javaType="java.lang.Integer"></id>
        <result property="user_name" column="user_name" javaType="java.lang.String"></result>
        <result property="user_password" column="user_password" javaType="java.lang.String"></result>
        <result property="user_account" column="user_account" javaType="java.lang.String"></result>
        <result property="isAdmin" column="isAdmin" javaType="java.lang.Integer"></result>
    </resultMap>

    <!-- 批量操作和foreach标签 -->

    <insert id="batchInsertUser" parameterType="java.util.List">
        insert into t_user values
        <foreach collection="users" item="users" separator=",">
            (null,#{users.user_name},#{users.user_password},#{users.user_account})
        </foreach>
    </insert>


    <delete id="batchDeleteUser">
        delete from t_user where id in (
        <foreach collection="list" item="list" separator=",">
            #{user_id}
        </foreach>
        )
    </delete>

    <!--collection 为用于遍历的元素（必选），支持数组、List、Set  -->
    <!-- item 表示集合中每一个元素进行迭代时的别名. -->
    <!--separator表示在每次进行迭代之间以什么符号作为分隔 符.  -->

    <!--#在生成SQL时，对于字符类型参数，会拼装引号
         $在生成SQL时，不会拼装引号，可用于order by之类的参数拼装
      -->
    <select id="pagerUser" parameterType="java.util.Map" resultMap="userMap">
        select * from t_user where 1=1
        <if test="user_name!=null">
            and user_name like '%${user_name}%'
        </if>
        limit ${index},${pageSize}
    </select>

    <select id="countUser" parameterType="java.util.Map" resultType="int">
        select count(*) from t_user where 1=1
        <if test="user_name != null">
            and user_name like '%${user_name}%'
        </if>
    </select>

    <update id="updateUser" parameterType="com.jd.dao.beans.UserBean">

        update t_user
        <set>
            <if test="user_name != null and user_name.length &gt; 0 ">
                `user_name` = #{user_name,jdbcType=VARCHAR},
            </if>
            <if test="user_password != null and user_password.length &gt; 0 ">
                `user_password` = #{user_password,jdbcType=VARCHAR},
            </if>
            <if test="user_phone != null and user_phone.length &gt; 0 ">
                `user_phone` = #{user_phone,jdbcType=VARCHAR},
            </if>

            <if test="last_login_time != null ">
                `last_login_time` = #{last_login_time,jdbcType=TIMESTAMP},
            </if>
        </set>

        where user_id = #{user_id,jdbcType=INTEGER}

    </update>


</mapper>	